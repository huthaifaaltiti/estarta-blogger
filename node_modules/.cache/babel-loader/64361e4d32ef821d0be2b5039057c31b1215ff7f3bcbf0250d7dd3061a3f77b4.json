{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Estarta Training Program - ReactJs\\\\Projects\\\\estarta-blogger\\\\src\\\\components\\\\home\\\\index.js\",\n  _s = $RefreshSig$();\n// import Blog from \"./Blog\";\nimport Styles from \"./styles.module.css\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log(\"222222222222222222222222222222222222222222\");\nconst Home = () => {\n  _s();\n  const [searchedValue, setSearchedValue] = useState(\"\");\n  const {\n    data: blogs,\n    loading,\n    error\n  } = useFetch(\"http://localhost:7000/Blogs\");\n  const filteredBlogs = blogs === null || blogs === void 0 ? void 0 : blogs.filter(blog => blog === null || blog === void 0 ? void 0 : blog.title.toLowerCase().includes(searchedValue.toLowerCase()));\n  if (loading) return \"Loading...\";\n  if (error) return \"Error happened!\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.search,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search titles...\",\n        onChange: e => setSearchedValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.home,\n      children: (filteredBlogs === null || filteredBlogs === void 0 ? void 0 : filteredBlogs.length) > 0 ? filteredBlogs === null || filteredBlogs === void 0 ? void 0 : filteredBlogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 42\n      }, this)) : \"no blogs!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"DaEnJ8p3rEV7w+Gx33YYQOhU+hY=\", false, function () {\n  return [useFetch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Styles","useFetch","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","console","log","Home","_s","searchedValue","setSearchedValue","data","blogs","loading","error","filteredBlogs","filter","blog","title","toLowerCase","includes","children","className","search","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","home","length","map","Blog","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Estarta Training Program - ReactJs/Projects/estarta-blogger/src/components/home/index.js"],"sourcesContent":["// import Blog from \"./Blog\";\r\nimport Styles from \"./styles.module.css\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useState } from \"react\";\r\nconsole.log(\"222222222222222222222222222222222222222222\");\r\nconst Home = () => {\r\n  const [searchedValue, setSearchedValue] = useState(\"\");\r\n  const {\r\n    data: blogs,\r\n    loading,\r\n    error,\r\n  } = useFetch(\"http://localhost:7000/Blogs\");\r\n\r\n  const filteredBlogs = blogs?.filter((blog) =>\r\n    blog?.title.toLowerCase().includes(searchedValue.toLowerCase())\r\n  );\r\n\r\n  if (loading) return \"Loading...\";\r\n  if (error) return \"Error happened!\";\r\n\r\n  return (\r\n    <>\r\n      <div className={Styles.search}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search titles...\"\r\n          onChange={(e) => setSearchedValue(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={Styles.home}>\r\n        {/* ToDo: the main thing i need is my search, so when search will back with a searched blogs not all blogs */}\r\n        {filteredBlogs?.length > 0\r\n          ? filteredBlogs?.map((blog) => <Blog key={blog.id} blog={blog} />)\r\n          : \"no blogs!\"}\r\n\r\n        {/* here will be back with all blogs not the search one  */}\r\n        {/* {blogs?.length > 0\r\n          ? blogs?.map((blog) => <Blog key={blog.id} blog={blog} />)\r\n          : \"no blogs!\"} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjCC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;AACzD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IACJW,IAAI,EAAEC,KAAK;IACXC,OAAO;IACPC;EACF,CAAC,GAAGf,QAAQ,CAAC,6BAA6B,CAAC;EAE3C,MAAMgB,aAAa,GAAGH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,MAAM,CAAEC,IAAI,IACvCA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACX,aAAa,CAACU,WAAW,EAAE,CAAC,CAChE;EAED,IAAIN,OAAO,EAAE,OAAO,YAAY;EAChC,IAAIC,KAAK,EAAE,OAAO,iBAAiB;EAEnC,oBACEZ,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAKoB,SAAS,EAAExB,MAAM,CAACyB,MAAO;MAAAF,QAAA,eAC5BnB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BC,QAAQ,EAAGC,CAAC,IAAKjB,gBAAgB,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACN/B,OAAA;MAAKoB,SAAS,EAAExB,MAAM,CAACoC,IAAK;MAAAb,QAAA,EAEzB,CAAAN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEoB,MAAM,IAAG,CAAC,GACtBpB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEqB,GAAG,CAAEnB,IAAI,iBAAKf,OAAA,CAACmC,IAAI;QAAepB,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACqB,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAgB,CAAC,GAChE;IAAW;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMX;EAAA,gBACL;AAEP,CAAC;AAACzB,EAAA,CArCID,IAAI;EAAA,QAMJR,QAAQ;AAAA;AAAAwC,EAAA,GANRhC,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}