{"ast":null,"code":"import _slicedToArray from\"C:/Users/User/Desktop/Estarta Training Program - ReactJs/Projects/estarta-blogger/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// react\nimport React,{useEffect}from\"react\";import{useState}from\"react\";// react-redux\nimport{useDispatch,useSelector}from\"react-redux\";// react-helmet\nimport{Helmet}from\"react-helmet\";// component\nimport Blog from\"../../components/Blog/index\";import{FetchBlogs}from\"../../redux/reducers/BlogsReducer/actions\";// styles, icons\nimport\"../../index.css\";import Styles from\"./styles.module.css\";// 1st solution: using custom hook\n// import useFetch from \"../../hooks/useFetch\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Home=function Home(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.blogsReducer;}),blogs=_useSelector.blogs;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchedValue=_useState2[0],setSearchedValue=_useState2[1];// Note: prev-sol using useFetch.js\n// const {\n//   data: blogs,\n//   loading,\n//   error,\n// } = useFetch(\"http://localhost:7000/Blogs\");\n// 2nd sol: fetching blogs using redux store\nuseEffect(function(){dispatch(FetchBlogs());},[]);// blogs filtration\nvar filteredBlogs=blogs===null||blogs===void 0?void 0:blogs.filter(function(blog){return blog===null||blog===void 0?void 0:blog.title.toLowerCase().includes(searchedValue.toLowerCase());});// Note: prev-sol using useFetch.js\n// if (loading) return \"Loading...\";\n// if (error) return \"Error happened!\";\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"meta\",{charSet:\"utf-8\"}),/*#__PURE__*/_jsx(\"title\",{children:\"Home Blogs\"})]}),/*#__PURE__*/_jsx(\"div\",{className:Styles.search,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search blog titles...\",onChange:function onChange(e){return setSearchedValue(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:Styles.home,children:(filteredBlogs===null||filteredBlogs===void 0?void 0:filteredBlogs.length)>0?filteredBlogs===null||filteredBlogs===void 0?void 0:filteredBlogs.map(function(blog){return/*#__PURE__*/_jsx(Blog,{blog:blog},blog.id);}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"p\",{className:Styles.noBlogsPara,children:\"No blogs! Search another title.\"})})})]});};export default Home;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Helmet","Blog","FetchBlogs","Styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","dispatch","_useSelector","state","blogsReducer","blogs","_useState","_useState2","_slicedToArray","searchedValue","setSearchedValue","filteredBlogs","filter","blog","title","toLowerCase","includes","children","charSet","className","search","type","placeholder","onChange","e","target","value","home","length","map","id","noBlogsPara"],"sources":["C:/Users/User/Desktop/Estarta Training Program - ReactJs/Projects/estarta-blogger/src/pages/Home/index.js"],"sourcesContent":["// react\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n// react-redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// react-helmet\r\nimport { Helmet } from \"react-helmet\";\r\n// component\r\nimport Blog from \"../../components/Blog/index\";\r\n\r\nimport { FetchBlogs } from \"../../redux/reducers/BlogsReducer/actions\";\r\n\r\n// styles, icons\r\nimport \"../../index.css\";\r\nimport Styles from \"./styles.module.css\";\r\n\r\n// 1st solution: using custom hook\r\n// import useFetch from \"../../hooks/useFetch\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const {blogs} = useSelector((state) => state.blogsReducer);\r\n  const [searchedValue, setSearchedValue] = useState(\"\");\r\n\r\n  // Note: prev-sol using useFetch.js\r\n  // const {\r\n  //   data: blogs,\r\n  //   loading,\r\n  //   error,\r\n  // } = useFetch(\"http://localhost:7000/Blogs\");\r\n\r\n  // 2nd sol: fetching blogs using redux store\r\n  useEffect(() => {\r\n    dispatch(FetchBlogs());\r\n    \r\n  }, []);\r\n\r\n\r\n  // blogs filtration\r\n  const filteredBlogs = blogs?.filter((blog) =>\r\n    blog?.title.toLowerCase().includes(searchedValue.toLowerCase())\r\n  );\r\n\r\n  // Note: prev-sol using useFetch.js\r\n  // if (loading) return \"Loading...\";\r\n  // if (error) return \"Error happened!\";\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Home Blogs</title>\r\n      </Helmet>\r\n      {/* search bar */}\r\n      <div className={Styles.search}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search blog titles...\"\r\n          onChange={(e) => setSearchedValue(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Blogs from API */}\r\n      <div className={Styles.home}>\r\n        {/* ToDo: the main thing i need is my search, so when search will back with a searched blogs not all blogs */}\r\n        {filteredBlogs?.length > 0 ? (\r\n          filteredBlogs?.map((blog) => <Blog key={blog.id} blog={blog} />)\r\n        ) : (\r\n          <>\r\n            <p className={Styles.noBlogsPara}>\r\n              No blogs! Search another title.\r\n            </p>\r\n          </>\r\n        )}\r\n\r\n        {/* here will be back with all blogs not the search one  */}\r\n        {/* {blogs?.length > 0\r\n          ? blogs?.map((blog) => <Blog key={blog?.id} blog={blog} />)\r\n          : \"No blogs!\"} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n"],"mappings":"uKAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,QAAQ,KAAQ,OAAO,CAChC;AACA,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD;AACA,OAASC,MAAM,KAAQ,cAAc,CACrC;AACA,MAAO,CAAAC,IAAI,KAAM,6BAA6B,CAE9C,OAASC,UAAU,KAAQ,2CAA2C,CAEtE;AACA,MAAO,iBAAiB,CACxB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAExC;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEA,GAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAA,CAAS,CACjB,GAAM,CAAAC,QAAQ,CAAGb,WAAW,EAAE,CAC9B,IAAAc,YAAA,CAAgBb,WAAW,CAAC,SAACc,KAAK,QAAK,CAAAA,KAAK,CAACC,YAAY,GAAC,CAAnDC,KAAK,CAAAH,YAAA,CAALG,KAAK,CACZ,IAAAC,SAAA,CAA0CnB,QAAQ,CAAC,EAAE,CAAC,CAAAoB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/CG,aAAa,CAAAF,UAAA,IAAEG,gBAAgB,CAAAH,UAAA,IAEtC;AACA;AACA;AACA;AACA;AACA;AAEA;AACArB,SAAS,CAAC,UAAM,CACde,QAAQ,CAACT,UAAU,EAAE,CAAC,CAExB,CAAC,CAAE,EAAE,CAAC,CAGN;AACA,GAAM,CAAAmB,aAAa,CAAGN,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEO,MAAM,CAAC,SAACC,IAAI,QACvC,CAAAA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,aAAa,CAACM,WAAW,EAAE,CAAC,GAChE,CAED;AACA;AACA;AAEA,mBACElB,KAAA,CAAAE,SAAA,EAAAkB,QAAA,eACEpB,KAAA,CAACP,MAAM,EAAA2B,QAAA,eACLtB,IAAA,SAAMuB,OAAO,CAAC,OAAO,EAAG,cACxBvB,IAAA,UAAAsB,QAAA,CAAO,YAAU,EAAQ,GAClB,cAETtB,IAAA,QAAKwB,SAAS,CAAE1B,MAAM,CAAC2B,MAAO,CAAAH,QAAA,cAC5BtB,IAAA,UACE0B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,uBAAuB,CACnCC,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAAd,gBAAgB,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC,EAClD,EACE,cAGN/B,IAAA,QAAKwB,SAAS,CAAE1B,MAAM,CAACkC,IAAK,CAAAV,QAAA,CAEzB,CAAAN,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEiB,MAAM,EAAG,CAAC,CACxBjB,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEkB,GAAG,CAAC,SAAChB,IAAI,qBAAKlB,IAAA,CAACJ,IAAI,EAAesB,IAAI,CAAEA,IAAK,EAApBA,IAAI,CAACiB,EAAE,CAAgB,GAAC,cAEhEnC,IAAA,CAAAI,SAAA,EAAAkB,QAAA,cACEtB,IAAA,MAAGwB,SAAS,CAAE1B,MAAM,CAACsC,WAAY,CAAAd,QAAA,CAAC,iCAElC,EAAI,EAEP,EAMG,GACL,CAEP,CAAC,CACD,cAAe,CAAAjB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}