{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Estarta Training Program - ReactJs\\\\Projects\\\\estarta-blogger\\\\src\\\\pages\\\\Home\\\\index.js\",\n  _s = $RefreshSig$();\n// react\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n// react-redux\nimport { useDispatch, useSelector } from \"react-redux\";\n// react-helmet\nimport { Helmet } from \"react-helmet\";\n// component\nimport Blog from \"./Blog\";\nimport { FetchBlogs } from \"../../redux/reducers/Blogs/actions\";\n\n// styles, icons\nimport \"../../index.css\";\nimport Styles from \"./styles.module.css\";\n\n// 1st solution: using custom hook\n// import useFetch from \"../../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const blogs = useSelector(state => state.blogsReducer);\n  const dispatch = useDispatch();\n  const [searchedValue, setSearchedValue] = useState(\"\");\n\n  // Note: prev-sol using useFetch.js\n  // const {\n  //   data: blogs,\n  //   loading,\n  //   error,\n  // } = useFetch(\"http://localhost:7000/Blogs\");\n\n  // 2nd sol: fetching blogs using redux store\n  useEffect(() => {\n    dispatch(FetchBlogs());\n  }, []);\n\n  // console.log(blogs);\n\n  // async function fetchData() {\n  //   try {\n  //     // API data request\n  //     dispatch({ type: \"FETCH_DATA_REQUEST\" });\n\n  //     const response = await fetch(\"http://localhost:7000/Blogs\");\n  //     const responseData = await response.json();\n\n  //     // Fetching blogs, Success\n  //     dispatch({ type: \"FETCH_DATA_SUCCESS\", payload: responseData });\n  //   } catch (error) {\n  //     // Fetching blogs, Failure\n  //     dispatch({ type: \"FETCH_DATA_FAILURE\", payload: error.message });\n  //     console.log(error);\n  //   }\n  // }\n\n  // blogs filtration\n  const filteredBlogs = blogs === null || blogs === void 0 ? void 0 : blogs.filter(blog => blog === null || blog === void 0 ? void 0 : blog.title.toLowerCase().includes(searchedValue.toLowerCase()));\n\n  // Note: prev-sol using useFetch.js\n  // if (loading) return \"Loading...\";\n  // if (error) return \"Error happened!\";\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.search,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search blog titles...\",\n        onChange: e => setSearchedValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.home,\n      children: (filteredBlogs === null || filteredBlogs === void 0 ? void 0 : filteredBlogs.length) > 0 ? filteredBlogs === null || filteredBlogs === void 0 ? void 0 : filteredBlogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Styles.noBlogsPara,\n          children: \"No blogs! Search another title.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"BG1XAlCTJZmdsY8S84J6K67WZik=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Helmet","Blog","FetchBlogs","Styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","blogs","state","blogsReducer","dispatch","searchedValue","setSearchedValue","filteredBlogs","filter","blog","title","toLowerCase","includes","children","charSet","fileName","_jsxFileName","lineNumber","columnNumber","className","search","type","placeholder","onChange","e","target","value","home","length","map","id","noBlogsPara","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Estarta Training Program - ReactJs/Projects/estarta-blogger/src/pages/Home/index.js"],"sourcesContent":["// react\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n// react-redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// react-helmet\r\nimport { Helmet } from \"react-helmet\";\r\n// component\r\nimport Blog from \"./Blog\";\r\n\r\nimport { FetchBlogs } from \"../../redux/reducers/Blogs/actions\";\r\n\r\n// styles, icons\r\nimport \"../../index.css\";\r\nimport Styles from \"./styles.module.css\";\r\n\r\n// 1st solution: using custom hook\r\n// import useFetch from \"../../hooks/useFetch\";\r\n\r\nconst Home = () => {\r\n  const blogs = useSelector((state) => state.blogsReducer);\r\n  const dispatch = useDispatch();\r\n  const [searchedValue, setSearchedValue] = useState(\"\");\r\n\r\n  // Note: prev-sol using useFetch.js\r\n  // const {\r\n  //   data: blogs,\r\n  //   loading,\r\n  //   error,\r\n  // } = useFetch(\"http://localhost:7000/Blogs\");\r\n\r\n  // 2nd sol: fetching blogs using redux store\r\n  useEffect(() => {\r\n    dispatch(FetchBlogs())\r\n  }, []);\r\n\r\n  // console.log(blogs);\r\n\r\n  // async function fetchData() {\r\n  //   try {\r\n  //     // API data request\r\n  //     dispatch({ type: \"FETCH_DATA_REQUEST\" });\r\n\r\n  //     const response = await fetch(\"http://localhost:7000/Blogs\");\r\n  //     const responseData = await response.json();\r\n\r\n  //     // Fetching blogs, Success\r\n  //     dispatch({ type: \"FETCH_DATA_SUCCESS\", payload: responseData });\r\n  //   } catch (error) {\r\n  //     // Fetching blogs, Failure\r\n  //     dispatch({ type: \"FETCH_DATA_FAILURE\", payload: error.message });\r\n  //     console.log(error);\r\n  //   }\r\n  // }\r\n\r\n  // blogs filtration\r\n  const filteredBlogs = blogs?.filter((blog) =>\r\n    blog?.title.toLowerCase().includes(searchedValue.toLowerCase())\r\n  );\r\n\r\n  // Note: prev-sol using useFetch.js\r\n  // if (loading) return \"Loading...\";\r\n  // if (error) return \"Error happened!\";\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Home Blogs</title>\r\n      </Helmet>\r\n      {/* search bar */}\r\n      <div className={Styles.search}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search blog titles...\"\r\n          onChange={(e) => setSearchedValue(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Blogs from API */}\r\n      <div className={Styles.home}>\r\n        {/* ToDo: the main thing i need is my search, so when search will back with a searched blogs not all blogs */}\r\n        {filteredBlogs?.length > 0 ? (\r\n          filteredBlogs?.map((blog) => <Blog key={blog.id} blog={blog} />)\r\n        ) : (\r\n          <>\r\n            <p className={Styles.noBlogsPara}>\r\n              No blogs! Search another title.\r\n            </p>\r\n          </>\r\n        )}\r\n\r\n        {/* here will be back with all blogs not the search one  */}\r\n        {/* {blogs?.length > 0\r\n          ? blogs?.map((blog) => <Blog blog={blog} />)\r\n          : \"No blogs!\"} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,MAAM,QAAQ,cAAc;AACrC;AACA,OAAOC,IAAI,MAAM,QAAQ;AAEzB,SAASC,UAAU,QAAQ,oCAAoC;;AAE/D;AACA,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,KAAK,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,YAAY,CAAC;EACxD,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAD,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAACX,UAAU,EAAE,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMc,aAAa,GAAGN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,MAAM,CAAEC,IAAI,IACvCA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,aAAa,CAACM,WAAW,EAAE,CAAC,CAChE;;EAED;EACA;EACA;;EAEA,oBACEf,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACL,MAAM;MAAAsB,QAAA,gBACLjB,OAAA;QAAMkB,OAAO,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxBtB,OAAA;QAAAiB,QAAA,EAAO;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB,eAETtB,OAAA;MAAKuB,SAAS,EAAEzB,MAAM,CAAC0B,MAAO;MAAAP,QAAA,eAC5BjB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,uBAAuB;QACnCC,QAAQ,EAAGC,CAAC,IAAKlB,gBAAgB,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eAGNtB,OAAA;MAAKuB,SAAS,EAAEzB,MAAM,CAACiC,IAAK;MAAAd,QAAA,EAEzB,CAAAN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEqB,MAAM,IAAG,CAAC,GACxBrB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEsB,GAAG,CAAEpB,IAAI,iBAAKb,OAAA,CAACJ,IAAI;QAAeiB,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACqB,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAgB,CAAC,gBAEhEtB,OAAA,CAAAE,SAAA;QAAAe,QAAA,eACEjB,OAAA;UAAGuB,SAAS,EAAEzB,MAAM,CAACqC,WAAY;UAAAlB,QAAA,EAAC;QAElC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;IAEP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMG;EAAA,gBACL;AAEP,CAAC;AAAClB,EAAA,CAhFID,IAAI;EAAA,QACMT,WAAW,EACRD,WAAW;AAAA;AAAA2C,EAAA,GAFxBjC,IAAI;AAiFV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}