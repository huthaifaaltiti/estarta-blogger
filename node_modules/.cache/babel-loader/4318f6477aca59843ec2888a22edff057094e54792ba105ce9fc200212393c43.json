{"ast":null,"code":"// blogs reducer constants\nimport * as BLOGS_CONSTANTS from \"./constants\";\n\n// fetching all blogs\nexport const FetchBlogs = () => async dispatch => {\n  try {\n    dispatch({\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_REQUEST\n    });\n    const response = await fetch(\"http://localhost:7000/Blogs\");\n    const dataBlogs = await response.json();\n    dispatch({\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SUCCESS,\n      payload: dataBlogs\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const fetchSingleBlog = id => async dispatch => {\n  try {\n    dispatch({\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_REQUEST\n    });\n    const response = await fetch(`http://localhost:7000/Blogs/${id}`);\n    const blogData = await response.json();\n    dispatch({\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SINGLE_BLOG_SUCCESS,\n      payload: blogData\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SINGLE_BLOG_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const fetchSingleBlogDelete = id => async dispatch => {\n  try {\n    const response = await fetch(`http://localhost:7000/Blogs/${id}`, {\n      method: \"DELETE\"\n    });\n    dispatch({\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SINGLE_BLOG_DELETE,\n      payload: response\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SINGLE_BLOG_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["BLOGS_CONSTANTS","FetchBlogs","dispatch","type","BLOGS_FETCH_DATA_REQUEST","response","fetch","dataBlogs","json","BLOGS_FETCH_DATA_SUCCESS","payload","error","BLOGS_FETCH_DATA_FAILURE","message","fetchSingleBlog","id","blogData","BLOGS_FETCH_DATA_SINGLE_BLOG_SUCCESS","BLOGS_FETCH_DATA_SINGLE_BLOG_FAILURE","fetchSingleBlogDelete","method","BLOGS_FETCH_DATA_SINGLE_BLOG_DELETE"],"sources":["C:/Users/User/Desktop/Estarta Training Program - ReactJs/Projects/estarta-blogger/src/redux/reducers/BlogsReducer/actions.js"],"sourcesContent":["// blogs reducer constants\r\nimport * as BLOGS_CONSTANTS from \"./constants\";\r\n\r\n// fetching all blogs\r\nexport const FetchBlogs = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_REQUEST,\r\n    });\r\n\r\n    const response = await fetch(\"http://localhost:7000/Blogs\");\r\n    const dataBlogs = await response.json();\r\n\r\n    dispatch({\r\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SUCCESS,\r\n      payload: dataBlogs,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_FAILURE,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchSingleBlog = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_REQUEST,\r\n    });\r\n\r\n    const response = await fetch(`http://localhost:7000/Blogs/${id}`);\r\n    const blogData = await response.json();\r\n\r\n    dispatch({\r\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SINGLE_BLOG_SUCCESS,\r\n      payload: blogData,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SINGLE_BLOG_FAILURE,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchSingleBlogDelete = (id) => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:7000/Blogs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    dispatch({\r\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SINGLE_BLOG_DELETE,\r\n      payload: response,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: BLOGS_CONSTANTS.BLOGS_FETCH_DATA_SINGLE_BLOG_FAILURE,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,eAAe,MAAM,aAAa;;AAE9C;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEH,eAAe,CAACI;IACxB,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3D,MAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAEvCN,QAAQ,CAAC;MACPC,IAAI,EAAEH,eAAe,CAACS,wBAAwB;MAC9CC,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPC,IAAI,EAAEH,eAAe,CAACY,wBAAwB;MAC9CF,OAAO,EAAEC,KAAK,CAACE;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,EAAE,IAAK,MAAOb,QAAQ,IAAK;EACzD,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEH,eAAe,CAACI;IACxB,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BS,EAAG,EAAC,CAAC;IACjE,MAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAACG,IAAI,EAAE;IAEtCN,QAAQ,CAAC;MACPC,IAAI,EAAEH,eAAe,CAACiB,oCAAoC;MAC1DP,OAAO,EAAEM;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPC,IAAI,EAAEH,eAAe,CAACkB,oCAAoC;MAC1DR,OAAO,EAAEC,KAAK,CAACE;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMM,qBAAqB,GAAIJ,EAAE,IAAK,MAAOb,QAAQ,IAAK;EAC/D,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BS,EAAG,EAAC,EAAE;MAChEK,MAAM,EAAE;IACV,CAAC,CAAC;IAEFlB,QAAQ,CAAC;MACPC,IAAI,EAAEH,eAAe,CAACqB,mCAAmC;MACzDX,OAAO,EAAEL;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdT,QAAQ,CAAC;MACPC,IAAI,EAAEH,eAAe,CAACkB,oCAAoC;MAC1DR,OAAO,EAAEC,KAAK,CAACE;IACjB,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}