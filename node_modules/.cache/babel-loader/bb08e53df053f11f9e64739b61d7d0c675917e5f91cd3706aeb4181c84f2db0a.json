{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Estarta Training Program - ReactJs\\\\Projects\\\\estarta-blogger\\\\src\\\\components\\\\home\\\\index.js\",\n  _s = $RefreshSig$();\n// react-redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// styles, icons\nimport \"../../index.css\";\nimport Styles from \"./styles.module.css\";\nimport React, { useEffect } from \"react\";\n\n// react-helmet\nimport { Helmet } from \"react-helmet\";\n\n// component\nimport Blog from \"./Blog\";\n\n// custom hook\nimport useFetch from \"../../hooks/useFetch\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [searchedValue, setSearchedValue] = useState(\"\");\n  const blogs = useSelector(state => state.blogs);\n  const dispatch = useDispatch();\n\n  // const {\n  //   data: blogs,\n  //   loading,\n  //   error,\n  // } = useFetch(\"http://localhost:7000/Blogs\");\n\n  async function fetchData() {\n    try {} catch (error) {}\n\n    // API data request\n    dispatch({\n      type: \"FETCH_DATA_REQUEST\"\n    });\n    const response = await fetch(\"http://localhost:7000/Blogs\");\n    const responseData = response.json();\n\n    // Fetching data, Success\n    dispatch({\n      type: \"FETCH_DATA_SUCCESS\",\n      payload: responseData\n    });\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const filteredBlogs = blogs === null || blogs === void 0 ? void 0 : blogs.filter(blog => blog === null || blog === void 0 ? void 0 : blog.title.toLowerCase().includes(searchedValue.toLowerCase()));\n\n  // if (loading) return \"Loading...\";\n  // if (error) return \"Error happened!\";\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.search,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search blog titles...\",\n        onChange: e => setSearchedValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.home,\n      children: (filteredBlogs === null || filteredBlogs === void 0 ? void 0 : filteredBlogs.length) > 0 ? filteredBlogs === null || filteredBlogs === void 0 ? void 0 : filteredBlogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 40\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Styles.noBlogsPara,\n          children: \"No blogs! Search another title.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"C5sSR+mlFi9cik70jhfkkHFkQzU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useDispatch","useSelector","Styles","React","useEffect","Helmet","Blog","useFetch","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","searchedValue","setSearchedValue","blogs","state","dispatch","fetchData","error","type","response","fetch","responseData","json","payload","filteredBlogs","filter","blog","title","toLowerCase","includes","children","charSet","fileName","_jsxFileName","lineNumber","columnNumber","className","search","placeholder","onChange","e","target","value","home","length","map","id","noBlogsPara","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Estarta Training Program - ReactJs/Projects/estarta-blogger/src/components/home/index.js"],"sourcesContent":["// react-redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// styles, icons\r\nimport \"../../index.css\";\r\nimport Styles from \"./styles.module.css\";\r\n\r\nimport React, { useEffect } from \"react\";\r\n\r\n// react-helmet\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n// component\r\nimport Blog from \"./Blog\";\r\n\r\n// custom hook\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useState } from \"react\";\r\n\r\nconst Home = () => {\r\n  const [searchedValue, setSearchedValue] = useState(\"\");\r\n\r\n  const blogs = useSelector((state) => state.blogs);\r\n  const dispatch = useDispatch();\r\n\r\n  // const {\r\n  //   data: blogs,\r\n  //   loading,\r\n  //   error,\r\n  // } = useFetch(\"http://localhost:7000/Blogs\");\r\n\r\n  async function fetchData() {\r\n\r\n    try {\r\n      \r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n    // API data request\r\n    dispatch({ type: \"FETCH_DATA_REQUEST\" });\r\n\r\n\r\n    const response = await fetch(\"http://localhost:7000/Blogs\");\r\n    const responseData = response.json();\r\n\r\n    // Fetching data, Success\r\n    dispatch({ type: \"FETCH_DATA_SUCCESS\", payload: responseData });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const filteredBlogs = blogs?.filter((blog) =>\r\n    blog?.title.toLowerCase().includes(searchedValue.toLowerCase())\r\n  );\r\n\r\n  // if (loading) return \"Loading...\";\r\n  // if (error) return \"Error happened!\";\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Home Blogs</title>\r\n      </Helmet>\r\n      {/* search bar */}\r\n      <div className={Styles.search}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search blog titles...\"\r\n          onChange={(e) => setSearchedValue(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Blogs from API */}\r\n      <div className={Styles.home}>\r\n        {/* ToDo: the main thing i need is my search, so when search will back with a searched blogs not all blogs */}\r\n        {filteredBlogs?.length > 0 ? (\r\n          filteredBlogs?.map((blog) => <Blog key={blog.id} blog={blog} />)\r\n        ) : (\r\n          <>\r\n            <p className={Styles.noBlogsPara}>\r\n              No blogs! Search another title.\r\n            </p>\r\n          </>\r\n        )}\r\n\r\n        {/* here will be back with all blogs not the search one  */}\r\n        {/* {blogs?.length > 0\r\n          ? blogs?.map((blog) => <Blog blog={blog} />)\r\n          : \"No blogs!\"} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}