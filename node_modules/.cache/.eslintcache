[{"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\home\\index.js":"4","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\header\\index.js":"5","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\notFound\\index.js":"6","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\single\\index.js":"7","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\newBlog\\index.js":"8","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\hooks\\useFetch.js":"9","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\home\\Blog.js":"10","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\store.js":"11","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\reducers\\blogsReducer.js":"12"},{"size":780,"mtime":1677996455014,"results":"13","hashOfConfig":"14"},{"size":1255,"mtime":1677698702790,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1677492844532,"results":"16","hashOfConfig":"14"},{"size":2857,"mtime":1677999697547,"results":"17","hashOfConfig":"14"},{"size":917,"mtime":1677662406711,"results":"18","hashOfConfig":"14"},{"size":1468,"mtime":1677697825488,"results":"19","hashOfConfig":"14"},{"size":1804,"mtime":1677697731657,"results":"20","hashOfConfig":"14"},{"size":2309,"mtime":1677697575465,"results":"21","hashOfConfig":"14"},{"size":933,"mtime":1677649524140,"results":"22","hashOfConfig":"14"},{"size":2386,"mtime":1677696210581,"results":"23","hashOfConfig":"14"},{"size":520,"mtime":1677995353729,"results":"24","hashOfConfig":"14"},{"size":678,"mtime":1677996941418,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"9086gg",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\index.js",[],[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\App.js",[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\home\\index.js",["65","66"],[],"// react-redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// react\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n// styles, icons\r\nimport \"../../index.css\";\r\nimport Styles from \"./styles.module.css\";\r\n\r\n// react-helmet\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n// component\r\nimport Blog from \"./Blog\";\r\n\r\n// custom hook\r\n// import useFetch from \"../../hooks/useFetch\";\r\n\r\nconst Home = () => {\r\n  const [searchedValue, setSearchedValue] = useState(\"\");\r\n\r\n  const blogs = useSelector((state) => state.blogs);\r\n  const errorFetching = useSelector((state) => state.error);\r\n  const dispatch = useDispatch();\r\n\r\n  // Note: prev-sol: using useFetch.js\r\n  // const {\r\n  //   data: blogs,\r\n  //   loading,\r\n  //   error,\r\n  // } = useFetch(\"http://localhost:7000/Blogs\");\r\n\r\n  // get data for first home render\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    try {\r\n      // API data request\r\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\r\n\r\n      const response = await fetch(\"http://localhost:70007/Blogs\");\r\n      const responseData = await response.json();\r\n\r\n      // console.log(\"Response data: \", responseData);\r\n\r\n      // Fetching data, Success\r\n      dispatch({ type: \"FETCH_DATA_SUCCESS\", payload: responseData });\r\n\r\n      console.log(\"Blogs: \", blogs);\r\n    } catch (error) {\r\n      // Fetching data, Failure\r\n      dispatch({ type: \"FETCH_DATA_FAILURE\", payload: error.message });\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const filteredBlogs = blogs?.filter((blog) =>\r\n    blog?.title.toLowerCase().includes(searchedValue.toLowerCase())\r\n  );\r\n\r\n  // Note: prev-sol: using useFetch.js\r\n  // if (loading) return \"Loading...\";\r\n  // if (error) return \"Error happened!\";\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Home Blogs</title>\r\n      </Helmet>\r\n      {/* search bar */}\r\n      <div className={Styles.search}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search blog titles...\"\r\n          onChange={(e) => setSearchedValue(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Blogs from API */}\r\n      <div className={Styles.home}>\r\n        {/* ToDo: the main thing i need is my search, so when search will back with a searched blogs not all blogs */}\r\n        {filteredBlogs?.length > 0 ? (\r\n          filteredBlogs?.map((blog) => <Blog key={blog.id} blog={blog} />)\r\n        ) : (\r\n          <>\r\n            <p className={Styles.noBlogsPara}>\r\n              No blogs! Search another title.\r\n            </p>\r\n          </>\r\n        )}\r\n\r\n        {/* here will be back with all blogs not the search one  */}\r\n        {/* {blogs?.length > 0\r\n          ? blogs?.map((blog) => <Blog blog={blog} />)\r\n          : \"No blogs!\"} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\header\\index.js",[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\notFound\\index.js",[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\single\\index.js",[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\newBlog\\index.js",[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\hooks\\useFetch.js",["67","68"],[],"import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n    fetch(url, {method:\"GET\"})\r\n      .then((res) => res.json())\r\n      .then((data) => setData(data))\r\n      .catch((error) => console.log(error));\r\n    setLoading(false);\r\n  };\r\n\r\n  return { error, loading, data };\r\n}\r\n\r\n\r\n// another solution to get data from API\r\n\r\n// const [data, setData] = useState([]);\r\n\r\n//   const fetchData = async () => {\r\n//     try {\r\n//       const data = await (await fetch(\"http://localhost:7000/Blogs\")).json();\r\n\r\n//       return setData(data);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);","C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\components\\home\\Blog.js",[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\store.js",[],[],"C:\\Users\\User\\Desktop\\Estarta Training Program - ReactJs\\Projects\\estarta-blogger\\src\\reducers\\blogsReducer.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":25,"column":9,"nodeType":"71","messageId":"72","endLine":25,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":38,"column":6,"nodeType":"75","endLine":38,"endColumn":8,"suggestions":"76"},{"ruleId":"69","severity":1,"message":"77","line":6,"column":17,"nodeType":"71","messageId":"72","endLine":6,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":8,"column":32,"nodeType":"75","endLine":8,"endColumn":34,"suggestions":"78"},"no-unused-vars","'errorFetching' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'setError' is assigned a value but never used.",["80"],{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},"Update the dependencies array to be: [fetchData]",{"range":"84","text":"85"},{"range":"86","text":"85"},[902,904],"[fetchData]",[258,260]]